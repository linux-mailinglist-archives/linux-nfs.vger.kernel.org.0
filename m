Return-Path: <linux-nfs-owner@vger.kernel.org>
X-Original-To: lists+linux-nfs@lfdr.de
Delivered-To: lists+linux-nfs@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 3B1F2455960
	for <lists+linux-nfs@lfdr.de>; Thu, 18 Nov 2021 11:48:10 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S245753AbhKRKvH (ORCPT <rfc822;lists+linux-nfs@lfdr.de>);
        Thu, 18 Nov 2021 05:51:07 -0500
Received: from outgoing-stata.csail.mit.edu ([128.30.2.210]:53027 "EHLO
        outgoing-stata.csail.mit.edu" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S245691AbhKRKvE (ORCPT
        <rfc822;linux-nfs@vger.kernel.org>); Thu, 18 Nov 2021 05:51:04 -0500
Received: from c-24-60-30-97.hsd1.ma.comcast.net ([24.60.30.97] helo=crash.local)
        by outgoing-stata.csail.mit.edu with esmtpsa (TLS1.2:DHE_RSA_AES_256_CBC_SHA256:256)
        (Exim 4.82)
        (envelope-from <rtm@csail.mit.edu>)
        id 1mnexV-000Ypx-3w; Thu, 18 Nov 2021 05:48:01 -0500
Received: from crash.local (localhost [127.0.0.1])
        by crash.local (Postfix) with ESMTP id 6049213D7C342;
        Thu, 18 Nov 2021 05:48:00 -0500 (EST)
To:     Trond Myklebust <trond.myklebust@hammerspace.com>,
        Anna Schumaker <anna.schumaker@netapp.com>
cc:     linux-nfs@vger.kernel.org
From:   rtm@csail.mit.edu
Reply-To: rtm@csail.mit.edu
Subject: NFS v4 client can dereference uninitialized pointer if server includes unrequested mdsthreshold attr
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
Date:   Thu, 18 Nov 2021 05:48:00 -0500
Message-ID: <60403.1637232480@crash.local>
Precedence: bulk
List-ID: <linux-nfs.vger.kernel.org>
X-Mailing-List: linux-nfs@vger.kernel.org

--=-=-=
Content-Type: text/plain

I think nfs_fattr_init() ought to set fattr->mdsthreshold to NULL. If
the kmalloc()'d attr memory doesn't happen to be zero at
fattr->mdsthreshold, and the server returns an unrequested mdsthreshold
attribute, then decode_getfattr_attrs() will try to store via the
uninitialized pointer in decode_first_threshold_item4().

I've attached a demo program, which I run with slub_debug=FZP:

# uname -a
Linux (none) 5.15.0-rc7-dirty #78 SMP Mon Nov 15 15:49:15 UTC 2021 riscv64 riscv64 riscv64 GNU/Linux
# cc nfs_15.c
# ./nfs_15
...
[   27.950132] decode_attr_mdsthreshold: Warning: Multiple pNFS layout drivers per filesystem not supported
[   27.969630] Unable to handle kernel paging request at virtual address 6b6b6b6b6b6b6b6f
[   28.058092] epc : ffffffff8023dee0 ra : ffffffff8023deb2 sp : ffffffd00055b500
[   28.231013] status: 0000000200000121 badaddr: 6b6b6b6b6b6b6b6f cause: 000000000000000f
[   28.246069] [<ffffffff8023dee0>] decode_getfattr_attrs+0xdae/0x11fe
[   28.259758] [<ffffffff8023e44e>] decode_getfattr_generic.constprop.0+0x11e/0x1b2
[   28.275547] [<ffffffff8023ec86>] nfs4_xdr_dec_lookup+0xa2/0xac
[   28.289208] [<ffffffff80754750>] rpcauth_unwrap_resp_decode+0x12/0x1a
[   28.302635] [<ffffffff8075540c>] rpcauth_unwrap_resp+0x12/0x1a
[   28.316324] [<ffffffff8074b7a8>] call_decode+0x112/0x176
[   28.327634] [<ffffffff80753c8c>] __rpc_execute+0x76/0x216
[   28.338932] [<ffffffff807542aa>] rpc_execute+0x58/0x7e
[   28.350241] [<ffffffff8074cb34>] rpc_run_task+0x12c/0x16c
[   28.361567] [<ffffffff8022271e>] nfs4_call_sync_custom+0x12/0x32
[   28.375315] [<ffffffff802227ae>] nfs4_do_call_sync+0x70/0x8c
[   28.389058] [<ffffffff802233ba>] _nfs4_proc_lookup+0xf2/0x11a
[   28.402819] [<ffffffff8022e7ea>] nfs4_proc_lookup_common+0x7c/0x2a2
[   28.416516] [<ffffffff8022eace>] nfs4_proc_lookup+0x42/0x9e
[   28.427830] [<ffffffff80209c02>] nfs_lookup+0xa6/0x122
[   28.439138] [<ffffffff80209f18>] nfs_atomic_open+0x29a/0x342
[   28.452815] [<ffffffff8013756e>] path_openat+0x5ca/0xaf6
[   28.464063] [<ffffffff80138468>] do_filp_open+0x70/0xd0
[   28.475375] [<ffffffff801276de>] do_sys_openat2+0x1fc/0x298
[   28.486697] [<ffffffff80128870>] do_sys_open+0x3c/0x78
[   28.497986] [<ffffffff801288ee>] sys_openat+0x18/0x20
[   28.509270] [<ffffffff80003046>] ret_from_syscall+0x0/0x2


--=-=-=
Content-Type: application/octet-stream
Content-Disposition: attachment; filename=nfs_15.c
Content-Transfer-Encoding: base64

I2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHN0ZGxpYi5o
PgojaW5jbHVkZSA8dW5pc3RkLmg+CiNpbmNsdWRlIDxmY250bC5oPgojaW5jbHVkZSA8c3lzL3Nv
Y2tldC5oPgojaW5jbHVkZSA8c3lzL2lvY3RsLmg+CiNpbmNsdWRlIDxuZXRpbmV0L2luLmg+CiNp
bmNsdWRlIDxzeXMvd2FpdC5oPgojaW5jbHVkZSA8c3lzL3Jlc291cmNlLmg+CiNpbmNsdWRlIDxz
eXMvc3RhdC5oPgojaW5jbHVkZSA8YXNzZXJ0Lmg+CgppbnQgc3ltX29wID0gOTsKaW50IHN5bV9z
a2lwID0gMTA7CmludCBzeW1fdHlwZSA9IDA7IC8vIGFsbCBmYXR0cjQgZmlsZSB0eXBlcwppbnQg
c3ltX2ZoID0gMDsgLy8gYWxsIGZpbGUgaGFuZGxlcwppbnQgc3ltX2JpdG1hcHMgPSAwOwoKaW50
IG9wY291bnRzWzI1Nl07CmxvbmcgbG9uZyBuZXh0X2Nvb2tpZSA9IDM7CmludCBjdXJyZW50X2Zo
ID0gMDsKCi8vIG1hcCBmaWxlL2RpciBuYW1lcyB0byBmaWxlIGhhbmRsZQpjaGFyICpmaG5hbWVz
W10gPSB7CiAgICAgICAgICAgICAgICIiLAogICAgICAgICAgICAgICAidG1wIiwKICAgICAgICAg
ICAgICAgIngiLAogICAgICAgICAgICAgICAieSIsCiAgICAgICAgICAgICAgICJ6IiwKICAgICAg
ICAgICAgICAgInp6eiIsCiAgICAgICAgICAgICAgIDAKfTsKCmludApuYW1lMmZoKGNoYXIgKm5h
bWUpCnsKICBmb3IoaW50IGkgPSAwOyBmaG5hbWVzW2ldOyBpKyspewogICAgaWYoc3RyY21wKG5h
bWUsIGZobmFtZXNbaV0pID09IDApCiAgICAgIHJldHVybiBpOwogIH0KICByZXR1cm4gMTAwOwp9
CgojZGVmaW5lIE5BQSAxMjgKdW5zaWduZWQgbG9uZyBsb25nIGFhW05BQV0gPSB7CjB4MHVsbCwK
MHgyMDAwMDAwdWxsLAoweDB1bGwsCjB4MjAwMDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGws
CjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHg4MDAwMDAwdWxsLAoweDB1bGwsCjB4
MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgw
dWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1
bGwsCjB4MHVsbCwKMHgwdWxsLAoweDEwMDAwMDAwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxs
LAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHg2NTA4MDAwMDA2MDAw
MDAwdWxsLAoweGYwOGR1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxs
LAoweDB1bGwsCjB4MjAwMDAwMDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwK
MHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAow
eDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4
MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgw
dWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1
bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVs
bCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxs
LAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGws
CjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwK
MHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAow
eDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4
MHVsbCwKMHgwdWxsLAoweDB1bGwsCjB4MHVsbCwKMHgwdWxsLAp9OwppbnQgYWFpID0gMDsKCmNo
YXIgaWJ1Zls0MDk2XTsKaW50IGlsZW4gPSAwOwppbnQgaWkgPSAwOwpjaGFyIG9idWZbNDA5Nl07
CmludCBvaSA9IDA7CmludCBzeW1zdGFydCA9IC0xOwppbnQgc3ltZW5kID0gLTE7CgppbnQgcmVh
ZG4oaW50IGZkLCB2b2lkICp4YnVmLCBpbnQgbikgewogIGNoYXIgKmJ1ZiA9IChjaGFyICopIHhi
dWY7CiAgaW50IG9yaWcgPSBuOwogIHdoaWxlKG4gPiAwKXsKICAgIGludCBjYyA9IHJlYWQoZmQs
IGJ1Ziwgbik7CiAgICBpZihjYyA8PSAwKSB7IHBlcnJvcigicmVhZCIpOyByZXR1cm4gLTE7IH0K
ICAgIG4gLT0gY2M7CiAgICBidWYgKz0gY2M7CiAgfQogIHJldHVybiBvcmlnOwp9Cgp1bnNpZ25l
ZCBpbnQKcGFyc2UzMigpCnsKICBpZihpaSA+PSBpbGVuKXsKICAgIHByaW50ZigicGFyc2VkIGJl
eW9uZCB0aGUgZW5kIG9mIHRoZSBpbnB1dFxuIik7CiAgICByZXR1cm4gMDsKICB9CiAgdW5zaWdu
ZWQgaW50IHggPSAqKGludCopKGlidWYraWkpOwogIGlpICs9IDQ7CiAgcmV0dXJuIG50b2hsKHgp
Owp9Cgp1bnNpZ25lZCBsb25nIGxvbmcKcGFyc2U2NCgpCnsKICB1bnNpZ25lZCBsb25nIGxvbmcg
aGkgPSBwYXJzZTMyKCk7CiAgdW5zaWduZWQgbG9uZyBsb25nIGxvID0gcGFyc2UzMigpOwogIHJl
dHVybiAoaGkgPDwgMzIpIHwgbG87Cn0KCi8vIHNlc3Npb25pZDQgLS0gMTYgYnl0ZXMKdm9pZApw
YXJzZV9zaWQoY2hhciAqc2lkKQp7CiAgZm9yKGludCBpID0gMDsgaSA8IDE2OyBpKyspewogICAg
aWYoc2lkKQogICAgICBzaWRbaV0gPSBpYnVmW2lpXTsKICAgIGlpKys7CiAgfQp9Cgp1bnNpZ25l
ZCBpbnQKcGFyc2Vfb3BhcXVlKGNoYXIgKmJ1ZikKewogIGlmKGJ1ZikKICAgIGJ1ZlswXSA9IDA7
CiAgaW50IG5vbWluYWxfbiA9IHBhcnNlMzIoKTsKICBpZihub21pbmFsX24gPiA0MDk2KXsKICAg
IHByaW50ZigiY3Jhenkgb3BhcXVlIGxlbmd0aCAlZFxuIiwgbm9taW5hbF9uKTsKICAgIHJldHVy
biAwOwogIH0KICBpbnQgcmVhbF9uID0gbm9taW5hbF9uOwogIHdoaWxlKChyZWFsX24lNCkgIT0g
MCkgcmVhbF9uICs9IDE7CiAgZm9yKGludCBpID0gMDsgaSA8IHJlYWxfbjsgaSsrKXsKICAgIGlm
KGJ1ZiAmJiBpIDwgcmVhbF9uKQogICAgICBidWZbaV0gPSBpYnVmW2lpXTsKICAgIGlpKys7CiAg
fQogIHJldHVybiBub21pbmFsX247Cn0KCnZvaWQKcHV0MzIodW5zaWduZWQgaW50IHgpCnsKICBh
c3NlcnQoKG9pICUgNCkgPT0gMCk7CiAgKihpbnQqKShvYnVmK29pKSA9IGh0b25sKHgpOwogIG9p
ICs9IDQ7Cn0KCnZvaWQKcHV0NjQodW5zaWduZWQgbG9uZyBsb25nIHgpCnsKICBwdXQzMih4ID4+
IDMyKTsKICBwdXQzMih4KTsKfQoKdm9pZApwdXRfb3BhcXVlKGludCBuLCBjaGFyICpidWYpCnsK
ICBwdXQzMihuKTsKICBmb3IoaW50IGkgPSAwOyBpIDwgbjsgaSsrKQogICAgb2J1ZltvaSsrXSA9
IChidWYgPyBidWZbaV0gOiAwKTsKICB3aGlsZSgobiU0KSE9MCl7CiAgICBvYnVmW29pKytdID0g
MDsKICAgIG4rKzsKICB9Cn0KCnZvaWQKcHV0X3NpZChjaGFyICpzaWQpCnsKICBmb3IoaW50IGkg
PSAwOyBpIDwgMTY7IGkrKyl7CiAgICBvYnVmW29pKytdID0gKHNpZCA/IHNpZFtpXSA6IDApOwog
IH0KfQoKdm9pZApwYXJzZV9ub3AoKQp7Cn0KCnZvaWQKcGFyc2Vfb3BfZXhjaGFuZ2VfaWQoKQp7
CiAgcGFyc2UzMigpOyAvLyB2ZXJpZmllcjQsIGZpcnN0IGhhbGYKICBwYXJzZTMyKCk7IC8vIHZl
cmlmaWVyNCwgc2Vjb25kIGhhbGYKICBwYXJzZV9vcGFxdWUoMCk7IC8vIGVpYV9jbGllbnRvd25l
cgogIGludCBjZmxhZ3MgPSBwYXJzZTMyKCk7IC8vIGVpYV9mbGFncwogIHBhcnNlMzIoKTsgLy8g
c3RhdGVfcHJvdGVjdDRfYS5zcGFfaG93LCBhc3N1bWUgU1A0X05PTkUKICBpbnQgbmltcGwgPSBw
YXJzZTMyKCk7IC8vIGxlbmd0aCBvZiBjbGllbnRfaW1wbF9pZAogIGZvcihpbnQgaW1wbGkgPSAw
OyBpbXBsaSA8IG5pbXBsOyBpbXBsaSsrKXsKICAgIGNoYXIganVua1s1MTJdOwogICAgcGFyc2Vf
b3BhcXVlKGp1bmspOyAvLyBuaWlfZG9tYWluCiAgICAvLyBwcmludGYoIm5paV9kb21haW46ICVz
XG4iLCBqdW5rKTsKICAgIHBhcnNlX29wYXF1ZShqdW5rKTsgLy8gbmlpX25hbWUKICAgIC8vIHBy
aW50ZigibmlpX25hbWU6ICVzXG4iLCBqdW5rKTsKICAgIHBhcnNlNjQoKTsgLy8gMS8yIG9mIG5m
c3RpbWU0CiAgICBwYXJzZTMyKCk7IC8vIDEvMiBvZiBuZnN0aW1lNAogIH0KCiAgLy8gZmluaXNo
IEVYQ0hBTkdFX0lENHJlcwogIHB1dDMyKDApOyAvLyBlaXJfc3RhdHVzID0gTkZTNF9PSwogIHB1
dDY0KDEpOyAvLyBjbGllbnRpZDQKICBwdXQzMigxKTsgLy8gc2VxdWVuY2VpZDQKICBpbnQgc2Zs
YWdzID0gMHgxMDMgfCAweDEwMDAwOyAvLyBFWENIR0lENF9GTEFHX1VTRV9OT05fUE5GUwogIHB1
dDMyKHNmbGFncyk7IC8vIGVpcl9mbGFncwogIHB1dDMyKDApOyAvLyBzdGF0ZV9wcm90ZWN0NF9y
LnNwcl9ob3cgPSBTUDRfTk9ORQogIHB1dDY0KDEpOyAvLyBzZXJ2ZXJfb3duZXI0LnNvX21pbm9y
X2lkCiAgcHV0MzIoNCk7IC8vIGxlbmd0aCBvZiBzb19tYWpvcl9pZDw+CiAgcHV0MzIoMHgxMTIy
MzM0NCk7IC8vIHNvX21ham9yX2lkPD4KICBwdXQzMig0KTsgLy8gbGVuZ3RoIG9mIGVpcl9zZXJ2
ZXJfc2NvcGUKICBwdXQzMigweDExMjIzMzQ0KTsKICBwdXQzMigxKTsgLy8gbGVuZ3RoIG9mIGVp
cl9zZXJ2ZXJfaW1wbF9pZDwxPgogIHB1dDMyKDQpOyAvLyBuZnNfaW1wbF9pZDQubmlpX2RvbWFp
bgogIHB1dDMyKDB4MTEyMjMzNDQpOwogIHB1dDMyKDQpOyAvLyBuZnNfaW1wbF9pZDQubmlpX25h
bWUKICBwdXQzMigweDExMjIzMzQ0KTsKICBwdXQ2NCgwKTsgLy8gbmlpX2RhdGUgMS8yCiAgcHV0
MzIoMCk7IC8vIG5paV9kYXRlIDIvMgp9Cgp2b2lkCnBhcnNlX29wX2NyZWF0ZV9zZXNzaW9uKCkK
ewogIHBhcnNlNjQoKTsgLy8gY3NhX2NsaWVudGlkCiAgaW50IHNlcSA9IHBhcnNlMzIoKTsgLy8g
Y3NhX3NlcXVlbmNlCiAgcGFyc2UzMigpOyAvLyBjc2FfZmxhZ3MKICAvLyBjc2FfZm9yZV9jaGFu
X2F0dHJzLCBjc2FfYmFja19jaGFuX2F0dHJzCiAgaW50IGF0dHJzWzJdWzZdOwogIGZvcihpbnQg
aSA9IDA7IGkgPCAyOyBpKyspewogICAgZm9yKGludCBqID0gMDsgaiA8IDY7IGorKyl7CiAgICAg
IGF0dHJzW2ldW2pdID0gcGFyc2UzMigpOwogICAgfQogICAgcGFyc2Vfb3BhcXVlKDApOyAvLyBj
YV9yZG1hX2lyZDwxPgogIH0KCiAgcHV0MzIoMCk7IC8vIE9LCiAgZm9yKGludCBpID0gMDsgaSA8
IDQ7IGkrKykKICAgIHB1dDMyKDEpOyAvLyBjc3Jfc2Vzc2lvbmlkIGkvNAogIHB1dDMyKHNlcSk7
IC8vIGNzcl9zZXF1ZW5jZQogIHB1dDMyKDB4Myk7IC8vIGNzcl9mbGFncwoKICBmb3IoaW50IGkg
PSAwOyBpIDwgMjsgaSsrKXsKICAgIGZvcihpbnQgaiA9IDA7IGogPCA2OyBqKyspCiAgICAgIHB1
dDMyKGF0dHJzW2ldW2pdKTsKICAgIHB1dDMyKDApOyAvLyBjYV9yZG1hX2lyZAogIH0KfQoKdm9p
ZApwYXJzZV9vcF9zZXF1ZW5jZSgpCnsKICBjaGFyIHNpZFsxNl07CgogIHBhcnNlX3NpZChzaWQp
OyAvLyBzYV9zZXNzaW9uaWQKICBpbnQgc2VxID0gcGFyc2UzMigpOyAvLyBzYV9zZXF1ZW5jZWlk
CiAgaW50IHNsb3QgPSBwYXJzZTMyKCk7IC8vIHNhX3Nsb3RpZAogIGludCBoaXNsb3QgPSBwYXJz
ZTMyKCk7IC8vIHNhX2hpZ2hlc3Rfc2xvdGlkCiAgcGFyc2UzMigpOyAvLyBzYV9jYWNoZXRoaXMK
CiAgcHV0MzIoMCk7IC8vIE9LCiAgcHV0X3NpZChzaWQpOyAvLyBzcl9zZXNzaW9uaWQKICBwdXQz
MihzZXEpOyAvLyBzcl9zZXF1ZW5jZWlkCiAgcHV0MzIoc2xvdCk7IC8vIHNyX3Nsb3RpZAogIHB1
dDMyKGhpc2xvdCk7IC8vIHNyX2hpZ2hlc3Rfc2xvdGlkCiAgcHV0MzIoaGlzbG90KTsgLy8gc3Jf
dGFyZ2V0X2hpZ2hlc3Rfc2xvdGlkCiAgcHV0MzIoMCk7IC8vIHNyX3N0YXR1c19mbGFncwp9Cgp2
b2lkCnBhcnNlX29wX3JlY2xhaW1fY29tcGxldGUoKQp7CiAgcGFyc2UzMigpOyAvLyByY2Ffb25l
X2ZzCiAgcHV0MzIoMCk7IC8vIHJjcl9zdGF0dXMKfQoKdm9pZApwYXJzZV9vcF9wdXRyb290Zmgo
KQp7CiAgLy8gbm8gYXJndW1lbnRzCiAgcHV0MzIoMCk7IC8vIE9LCiAgY3VycmVudF9maCA9IDA7
Cn0KCnZvaWQKcGFyc2Vfb3Bfc2VjaW5mb19ub19uYW1lKCkKewogIHBhcnNlMzIoKTsgLy8gc2Vj
aW5mb19zdHlsZTQKICBwdXQzMigwKTsgLy8gT0sKICBwdXQzMigxKTsgLy8gIyBvZiBzZWNpbmZv
NAojaWYgMQogIHB1dDMyKDApOyAvLyBmbGF2b3IgPSBBVVRIX05VTEwKI2Vsc2UKICBwdXQzMig2
KTsgLy8gZmxhdm9yID0gUlBDU0VDX0dTUwogIHB1dDMyKDQpOyAvLyBzaXplIG9mIHNlY19vaWQ0
CiAgcHV0MzIoMHhmZmZmZmZmZik7CiAgcHV0MzIoMCk7IC8vIHFvcDQKICBwdXQzMigxKTsgLy8g
cnBjX2dzc19zdmNfdAojZW5kaWYKfQoKdm9pZApwYXJzZV9vcF9kZXN0cm95X3Nlc3Npb24oKQp7
CiAgcGFyc2Vfc2lkKDApOwogIHB1dDMyKDApOyAvLyBPSwp9Cgp2b2lkCnBhcnNlX29wX2Rlc3Ry
b3lfY2xpZW50aWQoKQp7CiAgcGFyc2U2NCgpOyAvLyBjbGllbnRpZAogIHB1dDMyKDApOyAvLyBP
Swp9Cgp2b2lkCnBhcnNlX29wX2dldGZoKCkKewogIC8vIG5vIGFyZ3VtZW50cwogIHB1dDMyKDAp
OyAvLyBPSwogIGludCB4ZmggPSBjdXJyZW50X2ZoOwogIGlmKHN5bV9maCkgeGZoIF49IGFhW2Fh
aSsrXTsKICBwdXRfb3BhcXVlKDQsIChjaGFyKikmeGZoKTsgLy8gZmgKfQoKLy8KLy8gY2FsbGVk
IGJ5IGdldGF0dHIgYW5kIHJlYWRkaXIuCi8vIGdlbmVyYXRlcyBhIGZhdHRyNCAoYml0bWFwNCB0
aGVuIGF0dHJsaXN0NCkuCi8vCnZvaWQKcHV0X2ZhdHRyNChpbnQgYml0d29yZHMsIGludCB4d29y
ZHNbXSwgaW50IGZoKQp7CiAgaW50IHdvcmRzWzNdOwogIGZvcihpbnQgaSA9IDA7IGkgPCAzOyBp
KyspewogICAgaWYoaSA8IGJpdHdvcmRzKQogICAgICB3b3Jkc1tpXSA9IHh3b3Jkc1tpXTsKICAg
IGVsc2UKICAgICAgd29yZHNbaV0gPSAwOwogICAgaWYoc3ltX2JpdG1hcHMpewogICAgICB3b3Jk
c1tpXSBePSBhYVthYWkrK107CiAgICB9CiAgfQogIGJpdHdvcmRzID0gMzsKICBwdXQzMihiaXR3
b3Jkcyk7CiAgaW50IHdvcmQwaSA9IG9pOwogIGZvcihpbnQgaSA9IDA7IGkgPCBiaXR3b3Jkczsg
aSsrKQogICAgcHV0MzIod29yZHNbaV0pOwogIGludCBsZW5pID0gb2k7CiAgcHV0MzIoMCk7IC8v
IHBsYWNlaG9sZGVyIGZvciB0b3RhbCBsZW5ndGggb2YgYXR0cnMKICBmb3IoaW50IGEgPSAwOyBh
IDwgYml0d29yZHMqMzI7IGErKyl7CiAgICBpZih3b3Jkc1thLzMyXSAmICgxIDw8IChhICUgMzIp
KSl7CiAgICAgIGlmKGEgPT0gMCl7CiAgICAgICAgcHV0MzIoMik7IC8vICMgYml0bWFwIHdvcmRz
IG9mIHN1cHBvcnRlZCBhdHRycwogICAgICAgIHB1dDMyKDB4ZmZmZmZmZmYpOwogICAgICAgIHB1
dDMyKDB4ZmZmZmZmZmYpOwogICAgICB9IGVsc2UgaWYoYSA9PSAxKXsKICAgICAgICBpbnQgdHlw
ZSA9IDE7CiAgICAgICAgaWYoZmggPT0gMCB8fCBmaCA9PSAxKQogICAgICAgICAgdHlwZSA9IDI7
CiAgICAgICAgaWYoc3ltX3R5cGUpIHR5cGUgXj0gYWFbYWFpKytdOwogICAgICAgIHB1dDMyKHR5
cGUpOyAvLyBORjRESVI9MiBvciBORjRSRUc9MQogICAgICB9IGVsc2UgaWYoYSA9PSAyKXsKICAg
ICAgICBwdXQzMigwKTsgLy8gZmhfZXhwaXJlX3R5cGUKICAgICAgfSBlbHNlIGlmKGEgPT0gMyl7
CiAgICAgICAgcHV0NjQoMCk7IC8vIGNoYW5nZQogICAgICB9IGVsc2UgaWYoYSA9PSA0KXsKICAg
ICAgICBwdXQ2NCg0MDk2KjEwKTsgLy8gc2l6ZQogICAgICB9IGVsc2UgaWYoYSA9PSA1KXsKICAg
ICAgICBwdXQzMigxKTsgLy8gbGluayBzdXBwb3J0CiAgICAgIH0gZWxzZSBpZihhID09IDYpewog
ICAgICAgIHB1dDMyKDEpOyAvLyBzeW1saW5rIHN1cHBvcnQKICAgICAgfSBlbHNlIGlmKGEgPT0g
OCl7CiAgICAgICAgcHV0NjQoMSk7IC8vIGZzaWQgbWFqb3IKICAgICAgICBwdXQ2NCgxKTsgLy8g
ZnNpZCBtaW5vcgogICAgICB9IGVsc2UgaWYoYSA9PSAxMCl7CiAgICAgICAgcHV0MzIoMSk7IC8v
IGxlYXNlIHRpbWUKICAgICAgfSBlbHNlIGlmKGEgPT0gMTEpewogICAgICAgIHB1dDMyKDApOyAv
LyByZGF0dHJfZXJyb3IKICAgICAgfSBlbHNlIGlmKGEgPT0gMTMpewogICAgICAgIHB1dDMyKDB4
Zik7IC8vIGFjbHN1cHBvcnQKICAgICAgfSBlbHNlIGlmKGEgPT0gMTkpewogICAgICAgIC8vIGZp
bGVoYW5kbGUKICAgICAgICBpbnQgeGZoID0gZmg7CiAgICAgICAgaWYoc3ltX2ZoKSB4ZmggXj0g
YWFbYWFpKytdOwogICAgICAgIHB1dF9vcGFxdWUoNCwgKGNoYXIqKSZ4ZmgpOyAvLyBmaAogICAg
ICB9IGVsc2UgaWYoYSA9PSAyMCl7CiAgICAgICAgcHV0NjQoZmgpOyAvLyBmaWxlaWQKICAgICAg
fSBlbHNlIGlmKGEgPT0gMjQpewogICAgICAgIC8vIGZzX2xvY2F0aW9ucwogICAgICAgIHB1dDMy
KDEpOwogICAgICAgIHB1dF9vcGFxdWUoMTAsICJhYmNkZTEyMzQ1Iik7IC8vIHBhdGhuYW1lNAog
ICAgICAgIHB1dDMyKDEpOyAvLyBsb2NhdGlvbnM8PgogICAgICAgIHB1dF9vcGFxdWUoMTAsICJh
YmNkZTEyMzQ1Iik7IC8vIHNlcnZlcgogICAgICAgIHB1dDMyKDEpOwogICAgICAgIHB1dF9vcGFx
dWUoMTAsICJhYmNkZTEyMzQ1Iik7IC8vIHJvb3RwYXRoCiAgICAgIH0gZWxzZSBpZihhID09IDI3
KXsKICAgICAgICBwdXQ2NCgweGZmZmZmZmZmZmZmZik7IC8vIG1heCBmaWxlIHNpemUKICAgICAg
fSBlbHNlIGlmKGEgPT0gMjgpewogICAgICAgIHB1dDMyKDB4ZmZmZik7IC8vIG1heCBsaW5rCiAg
ICAgIH0gZWxzZSBpZihhID09IDI5KXsKICAgICAgICBwdXQzMigyNTYpOyAvLyBtYXggbmFtZQog
ICAgICB9IGVsc2UgaWYoYSA9PSAzMCl7CiAgICAgICAgcHV0NjQoMTAqNDA5Nik7IC8vIG1heCBy
ZWFkCiAgICAgIH0gZWxzZSBpZihhID09IDMxKXsKICAgICAgICBwdXQ2NCgxMCo0MDk2KTsgLy8g
bWF4IHdyaXRlCiAgICAgIH0gZWxzZSBpZihhID09IDMzKXsKICAgICAgICBwdXQzMigwNzc3KTsg
Ly8gbW9kZQogICAgICB9IGVsc2UgaWYoYSA9PSAzNSl7CiAgICAgICAgcHV0MzIoMyk7IC8vIG51
bWxpbmtzCiAgICAgIH0gZWxzZSBpZihhID09IDM2KXsKICAgICAgICBwdXRfb3BhcXVlKDYsICJv
dGhlciIpOyAvLyBvd25lcgogICAgICB9IGVsc2UgaWYoYSA9PSAzNyl7CiAgICAgICAgcHV0X29w
YXF1ZSg2LCAib3RoZXIiKTsgLy8gb3duZXJfZ3JvdXAKICAgICAgfSBlbHNlIGlmKGEgPT0gNDEp
ewogICAgICAgIHB1dDMyKDEpOyAvLyByYXdkZXYgbWFqb3IKICAgICAgICBwdXQzMigxKTsgLy8g
cmF3ZGV2IG1pbm9yCiAgICAgIH0gZWxzZSBpZihhID09IDQ1KXsKICAgICAgICBwdXQ2NCg0MDk2
KjEwKTsgLy8gc3BhY2UgdXNlZAogICAgICB9IGVsc2UgaWYoYSA9PSA0Nyl7CiAgICAgICAgcHV0
NjQoMCk7IC8vIHRpbWUgYWNjZXNzIHNlY29uZHMKICAgICAgICBwdXQzMigwKTsgLy8gbnNlY29u
ZHMKICAgICAgfSBlbHNlIGlmKGEgPT0gNTEpewogICAgICAgIHB1dDY0KDApOyAvLyB0aW1lIGRl
bHRhIHNlY29uZHMKICAgICAgICBwdXQzMigwKTsgLy8gbnNlY29uZHMKICAgICAgfSBlbHNlIGlm
KGEgPT0gNTIpewogICAgICAgIHB1dDY0KDApOyAvLyB0aW1lIG1ldGFkYXRhIHNlY29uZHMKICAg
ICAgICBwdXQzMigwKTsgLy8gbnNlY29uZHMKICAgICAgfSBlbHNlIGlmKGEgPT0gNTMpewogICAg
ICAgIHB1dDY0KDApOyAvLyB0aW1lIG1vZGlmeSBzZWNvbmRzCiAgICAgICAgcHV0MzIoMCk7IC8v
IG5zZWNvbmRzCiAgICAgIH0gZWxzZSBpZihhID09IDU1KXsKICAgICAgICBwdXQ2NCgwKTsgLy8g
bW91bnRlZF9vbl9maWxlaWQgPz8/CiAgICAgIH0gZWxzZSBpZihhID09IDYyKXsKICAgICAgICAv
LyBmc19sYXlvdXRfdHlwZXMKICAgICAgICBwdXQzMigxKTsKICAgICAgICBwdXQzMigxKTsgLy8g
TEFZT1VUNF9ORlNWNF8xX0ZJTEVTCiAgICAgIH0gZWxzZSBpZihhID09IDc1KXsKICAgICAgICAv
LyBGQVRUUjRfU1VQUEFUVFJfRVhDTENSRUFUCiAgICAgICAgcHV0MzIoMik7IC8vIGJpdG1hcCBs
ZW5ndGgKICAgICAgICBwdXQzMigweGZmZmZmZmZmKTsKICAgICAgICBwdXQzMigweGZmZmZmZmZm
KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZihzeW1fYml0bWFwcyl7CiAgICAgICAgICB3b3Jk
c1thLzMyXSAmPSB+KDEgPDwgKGEgJSAzMikpOwogICAgICAgICAgKihpbnQqKShvYnVmICsgd29y
ZDBpICsgNCooYS8zMikpID0gaHRvbmwod29yZHNbYS8zMl0pOwogICAgICAgIH0gZWxzZSB7CiAg
ICAgICAgICBwcmludGYoInVua25vd24gcmVxdWVzdGVkIGF0dHIgJWRcbiIsIGEpOwogICAgICAg
ICAgcHV0NjQoMCk7IC8vIFhYWAogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KICAqKGludCop
KG9idWYrbGVuaSkgPSBodG9ubChvaSAtIGxlbmkgLSA0KTsKfQoKdm9pZApwYXJzZV9vcF9nZXRh
dHRyKCkKewogIGludCBiaXR3b3JkcyA9IHBhcnNlMzIoKTsKICBpbnQgd29yZHNbNjRdOwogIGZv
cihpbnQgaSA9IDA7IGkgPCBiaXR3b3JkczsgaSsrKQogICAgd29yZHNbaV0gPSBwYXJzZTMyKCk7
CiAgcHV0MzIoMCk7IC8vIE9LCiAgcHV0X2ZhdHRyNChiaXR3b3Jkcywgd29yZHMsIGN1cnJlbnRf
ZmgpOwp9Cgp2b2lkCnBhcnNlX29wX3B1dGZoKCkKewogIGNoYXIgYnVmWzY0XTsKICBpbnQgbiA9
IHBhcnNlX29wYXF1ZShidWYpOyAvLyBmaAogIGlmKG4gIT0gNCl7CiAgICBwcmludGYoIm9wX3B1
dGZoIGZoIHNpemUgJWQsIG5vdCA0XG4iLCBuKTsKICAgIGV4aXQoMSk7CiAgfQogIGludCBmaCA9
ICooaW50KilidWY7CiAgY3VycmVudF9maCA9IGZoOwogIHB1dDMyKDApOyAvLyBPSwp9Cgp2b2lk
CnBhcnNlX29wX2FjY2VzcygpCnsKICBpbnQgbWFzayA9IHBhcnNlMzIoKTsgLy8gbWFzayBvZiBy
aWdodHMgdG8gcXVlcnkKICBwdXQzMigwKTsgLy8gT0sKICBwdXQzMigweDNmKTsgLy8gc3VwcG9y
dGVkID0gYWxsIHJpZ2h0cwogIHB1dDMyKDB4M2YpOyAvLyBhY2Nlc3MgPSBhbGwgcmlnaHRzCn0K
CnZvaWQKcGFyc2Vfb3BfbG9va3VwKCkKewogIGNoYXIgbmFtZVsyNTZdOwogIGludCBuID0gcGFy
c2Vfb3BhcXVlKG5hbWUpOwogIG5hbWVbbj49MD9uOjBdID0gJ1wwJzsKICBwcmludGYoImxvb2t1
cCAlc1xuIiwgbmFtZSk7CiAgcHV0MzIoMCk7IC8vIE9LCiAgY3VycmVudF9maCA9IG5hbWUyZmgo
bmFtZSk7Cn0KCnZvaWQKcGFyc2Vfb3BfcmVhZGRpcigpCnsKICBsb25nIGxvbmcgY29va2llID0g
cGFyc2U2NCgpOwogIGxvbmcgbG9uZyB2ZXJmID0gcGFyc2U2NCgpOyAvLyBjb29raWUgdmVyaWZp
ZXIKICBwYXJzZTMyKCk7IC8vIGRpcmNvdW50CiAgcGFyc2UzMigpOyAvLyBtYXhjb3VudAogIC8v
IGF0dHJfcmVxdWVzdAogIGludCBiaXR3b3JkcyA9IHBhcnNlMzIoKTsKICBpbnQgd29yZHNbMzJd
OwogIGZvcihpbnQgaSA9IDA7IGkgPCBiaXR3b3JkczsgaSsrKQogICAgd29yZHNbaV0gPSBwYXJz
ZTMyKCk7CgogIHB1dDMyKDApOyAvLyBPSwogIHB1dDY0KHZlcmYpOyAvLyBjb29raWV2ZXJmCiAg
Y2hhciAqbmFtZXNbXSA9IHsgInoiLCAienp6IiB9OwogIGZvcihpbnQgaSA9IDA7IGkgPCAyOyBp
KyspewogICAgcHV0MzIoMSk7IC8vICpuZXh0ZW50cnkKICAgIHB1dDY0KG5leHRfY29va2llKysp
OyAvLyBjb29raWUKICAgIHB1dF9vcGFxdWUoMywgbmFtZXNbaV0pOyAvLyBuYW1lCiAgICBwdXRf
ZmF0dHI0KGJpdHdvcmRzLCB3b3JkcywgbmFtZTJmaChuYW1lc1tpXSkpOwogIH0KCiAgcHV0MzIo
MCk7IC8vICpuZXh0ZW50cnkKCiAgcHV0MzIoMSk7IC8vIGVvZgp9Cgp2b2lkCnBhcnNlX29wX29w
ZW4oKQp7CiAgY2hhciBuYW1lWzI1Nl07CiAgbmFtZVswXSA9IDA7CiAgcGFyc2UzMigpOyAvLyBz
ZXFpZAogIHBhcnNlMzIoKTsgLy8gc2hhcmVfYWNjZXNzCiAgcGFyc2UzMigpOyAvLyBzaGFyZV9k
ZW55CiAgcGFyc2U2NCgpOyAvLyBvd25lciBjbGllbnQgaWQKICBwYXJzZV9vcGFxdWUoMCk7IC8v
IG93bmVyIG93bmVyCiAgLy8gb3BlbmZsYWc0CiAgaW50IG9wZW50eXBlID0gcGFyc2UzMigpOwog
IGlmKG9wZW50eXBlID09IDEpewogICAgLy8gT1BFTjRfQ1JFQVRFCiAgICBpbnQgbW9kZSA9IHBh
cnNlMzIoKTsgLy8gY3JlYXRlaG93NAogICAgaWYobW9kZSA9PSAwKXsKICAgICAgLy8gVU5DSEVD
S0VENAogICAgICAvLyBmYXR0cjQgY3JlYXRlYXR0cnMKICAgICAgaW50IGJpdHdvcmRzID0gcGFy
c2UzMigpOwogICAgICBpbnQgd29yZHNbMzJdOwogICAgICBmb3IoaW50IGkgPSAwOyBpIDwgYml0
d29yZHM7IGkrKykKICAgICAgICB3b3Jkc1tpXSA9IHBhcnNlMzIoKTsKICAgICAgcGFyc2Vfb3Bh
cXVlKDApOyAvLyBhdHRybGlzdDQKICAgIH0gZWxzZSB7CiAgICAgIHByaW50ZigiT1BFTjRfQ1JF
QVRFIHVua25vd24gbW9kZSAlZFxuIiwgbW9kZSk7CiAgICAgIGV4aXQoMSk7CiAgICB9CiAgfSBl
bHNlIGlmKG9wZW50eXBlID09IDApewogICAgLy8gT1BFTjRfTk9DUkVBVEUKICB9IGVsc2Ugewog
ICAgcHJpbnRmKCJ1bmtub3duIG9wZW50eXBlICVkXG4iLCBvcGVudHlwZSk7CiAgICBleGl0KDEp
OwogIH0KICBpbnQgb3Blbl9jbGFpbV90eXBlID0gcGFyc2UzMigpOwogIGlmKG9wZW5fY2xhaW1f
dHlwZSA9PSAwKXsKICAgIC8vIENMQUlNX05VTEwKICAgIHBhcnNlX29wYXF1ZShuYW1lKTsgLy8g
ZmlsZSBuYW1lCiAgfSBlbHNlIGlmKG9wZW5fY2xhaW1fdHlwZSA9PSAyKXsKICAgIC8vIENMQUlN
X0RFTEVHQVRFX0NVUgogICAgLy8gb3Blbl9jbGFpbV9kZWxlZ2F0ZV9jdXI0CiAgICAvLyBzdGF0
ZWlkNAogICAgcGFyc2UzMigpOyAvLyBzZXFpZAogICAgcGFyc2UzMigpOwogICAgcGFyc2UzMigp
OwogICAgcGFyc2UzMigpOwogICAgcGFyc2Vfb3BhcXVlKG5hbWUpOyAvLyBmaWxlIG5hbWUKICB9
IGVsc2UgaWYob3Blbl9jbGFpbV90eXBlID09IDQpewogICAgLy8gQ0xBSU1fRkgKICB9IGVsc2Ug
ewogICAgcHJpbnRmKCJveSwgb3Blbl9jbGFpbV90eXBlICVkXG4iLCBvcGVuX2NsYWltX3R5cGUp
OwogICAgZXhpdCgxKTsKICB9CgogIHB1dDMyKDApOyAvLyBPSwogIC8vIHN0YXRlaWQ0CiAgcHV0
MzIoMSk7IC8vIHNlcWlkCiAgcHV0MzIoMSk7IC8vIG90aGVyCiAgcHV0MzIoMSk7CiAgcHV0MzIo
MSk7CiAgLy8gY2hhbmdlX2luZm80CiAgcHV0MzIoMSk7CiAgcHV0NjQoMCk7IC8vIGJlZm9yZQog
IHB1dDY0KDApOyAvLyBhZnRlcgogIHB1dDMyKDApOyAvLyByZmxhZ3MKICBwdXQzMigwKTsgLy8g
YXR0cnNldCBiaXRtYXAgbGVuZ3RoCiAgLy8gb3Blbl9kZWxlZ2F0aW9uNAogIHB1dDMyKDApOyAv
LyBPUEVOX0RFTEVHQVRFX05PTkUKICBwcmludGYoIiAgbmFtZT0lc1xuIiwgbmFtZSk7CiAgaWYo
bmFtZVswXSl7CiAgICBjdXJyZW50X2ZoID0gbmFtZTJmaChuYW1lKTsKICB9IGVsc2UgewogICAg
cHJpbnRmKCJvcF9vcGVuOiBubyBuYW1lIHdpdGggd2hpY2ggdG8gc2V0IGZoXG4iKTsKICB9Cn0K
CnZvaWQKcGFyc2Vfb3Bfc2V0YXR0cigpCnsKICAvLyBzdGF0ZWlkNAogIHBhcnNlMzIoKTsgLy8g
c2VxaWQKICBwYXJzZTMyKCk7IC8vIG90aGVyCiAgcGFyc2UzMigpOyAvLyBvdGhlcgogIHBhcnNl
MzIoKTsgLy8gb3RoZXIKICAvLyBmYXR0cjQKICBpbnQgYml0d29yZHMgPSBwYXJzZTMyKCk7CiAg
aW50IHdvcmRzWzY0XTsKICBmb3IoaW50IGkgPSAwOyBpIDwgYml0d29yZHM7IGkrKykKICAgIHdv
cmRzW2ldID0gcGFyc2UzMigpOwogIHBhcnNlX29wYXF1ZSgwKTsgLy8gYXR0cmxpc3Q0CgogIHB1
dDMyKDApOyAvLyBPSwogIHB1dDMyKGJpdHdvcmRzKTsKICBmb3IoaW50IGkgPSAwOyBpIDwgYml0
d29yZHM7IGkrKykKICAgIHB1dDMyKHdvcmRzW2ldKTsKfQoKdm9pZApwYXJzZV9vcF9sYXlvdXRn
ZXQoKQp7CiAgcGFyc2UzMigpOyAvLyBsb2dhX3NpZ25hbF9sYXlvdXRfYXZhaWwKICBwYXJzZTMy
KCk7IC8vIGxheW91dHR5cGU0CiAgcGFyc2UzMigpOyAvLyBsYXlvdXRpb21vZGU0CiAgcGFyc2U2
NCgpOyAvLyBvZmZzZXQKICBwYXJzZTY0KCk7IC8vIGxlbmd0aAogIHBhcnNlNjQoKTsgLy8gbWlu
bGVuZ3RoCiAgcGFyc2UzMigpOyAvLyBzdGF0ZWlkNCBzZXFpZAogIHBhcnNlMzIoKTsgLy8gc3Rh
dGVpZDQgb3RoZXIKICBwYXJzZTMyKCk7IC8vIHN0YXRlaWQ0IG90aGVyCiAgcGFyc2UzMigpOyAv
LyBzdGF0ZWlkNCBvdGhlcgogIHBhcnNlMzIoKTsgLy8gY291bnQzMgogIAogIHB1dDMyKDApOyAv
LyBPSwogIHB1dDMyKDApOyAvLyByZXR1cm5fb25fY2xvc2UKICBwdXQzMigwKTsgLy8gc3RhdGVp
ZDQgc2VxaWQKICBwdXQzMigwKTsgLy8gc3RhdGVpZDQgb3RoZXIKICBwdXQzMigwKTsgLy8gc3Rh
dGVpZDQgb3RoZXIKICBwdXQzMigwKTsgLy8gc3RhdGVpZDQgb3RoZXIKICBwdXQzMigxKTsgLy8g
IyBvZiBsYXlvdXQ0CiAgcHV0NjQoMCk7IC8vIG9mZnNldAogIHB1dDY0KDEwMDAwMDApOyAvLyBs
ZW5ndGgKICBwdXQzMigzKTsgLy8gbGF5b3V0aW9tb2RlNAogIHB1dDMyKDEpOyAvLyBsYXlvdXR0
eXBlNAogIHB1dF9vcGFxdWUoOCwgInh4eHh4eHh4Iik7IC8vIGxvY19ib2R5Cn0KCnZvaWQKcGFy
c2Vfb3Bfd3JpdGUoKQp7CiAgcGFyc2UzMigpOyAvLyBzdGF0ZWlkNAogIHBhcnNlMzIoKTsgLy8g
c3RhdGVpZDQKICBwYXJzZTMyKCk7IC8vIHN0YXRlaWQ0CiAgcGFyc2UzMigpOyAvLyBzdGF0ZWlk
NAogIHBhcnNlNjQoKTsgLy8gb2Zmc2V0CiAgcGFyc2UzMigpOyAvLyBzdGFibGVfaG93NAogIGlu
dCBuID0gcGFyc2Vfb3BhcXVlKDApOyAvLyBkYXRhCgogIHB1dDMyKDApOyAvLyBPSwogIHB1dDMy
KG4pOyAvLyBjb3VudAogIHB1dDMyKDApOyAvLyBVTlNUQUJMRTQKICBwdXQ2NCgxKTsgLy8gdmVy
aWZpZXIKfQoKdm9pZApwYXJzZV9vcF9yZWFkKCkKewogIHBhcnNlMzIoKTsgLy8gc3RhdGVpZDQK
ICBwYXJzZTMyKCk7IC8vIHN0YXRlaWQ0CiAgcGFyc2UzMigpOyAvLyBzdGF0ZWlkNAogIHBhcnNl
MzIoKTsgLy8gc3RhdGVpZDQKICBwYXJzZTY0KCk7IC8vIG9mZnNldAogIHBhcnNlMzIoKTsgLy8g
Y291bnQKCiAgcHV0MzIoMCk7IC8vIE9LCiAgcHV0MzIoMSk7IC8vIGVvZgogIHB1dF9vcGFxdWUo
NCwgImFiY2QiKTsKfQoKdm9pZApwYXJzZV9vcF9jb21taXQoKQp7CiAgcGFyc2U2NCgpOyAvLyBv
ZmZzZXQKICBwYXJzZTMyKCk7IC8vIGNvdW50CiAgcHV0MzIoMCk7IC8vIE9LCiAgcHV0NjQoMSk7
IC8vIHZlcmlmaWVyNAp9Cgp2b2lkCnBhcnNlX2NvbXBvdW5kKCkKewogIGNoYXIgdGFnWzUxMl07
CiAgaW50IHRhZ2xlbiA9IHBhcnNlX29wYXF1ZSh0YWcpOyAvLyB0YWcKICBwYXJzZTMyKCk7IC8v
IG1pbm9yIHZlcnNpb24KICBpbnQgbm9wcyA9IHBhcnNlMzIoKTsKCiAgLy8gc3RhcnQgYSBDT01Q
T1VORDRyZXMKICBwdXQzMigwKTsgLy8gbmZzc3RhdDQgPSBORlM0X09LCiAgcHV0X29wYXF1ZSh0
YWdsZW4sIHRhZyk7CiAgcHV0MzIobm9wcyk7IC8vIGxlbmd0aCBvZiByZXNhcnJheTw+CiAgCiAg
Zm9yKGludCBvcGluZGV4ID0gMDsgb3BpbmRleCA8IG5vcHMgJiYgb2kgPCBpbGVuOyBvcGluZGV4
KyspewogICAgaW50IG9wID0gcGFyc2UzMigpOwogICAgcHJpbnRmKCJvcCAlZCAjJWRcbiIsIG9w
LCBvcGNvdW50c1tvcCYweGZmXSk7CiAgICBwdXQzMihvcCk7IC8vIHJlc29wIGluIG5mc19yZXNv
cDQKICAgIGlmKHN5bV9vcCA9PSBvcCl7CiAgICAgIGlmKHN5bV9za2lwIDw9IDApewogICAgICAg
IHN5bXN0YXJ0ID0gb2k7CiAgICAgIH0KICAgICAgc3ltX3NraXAgLT0gMTsKICAgIH0KICAgIGlm
KG9wID09IDQyKXsKICAgICAgcGFyc2Vfb3BfZXhjaGFuZ2VfaWQoKTsKICAgIH0gZWxzZSBpZihv
cCA9PSA0Myl7CiAgICAgIHBhcnNlX29wX2NyZWF0ZV9zZXNzaW9uKCk7CiAgICB9IGVsc2UgaWYo
b3AgPT0gNTMpewogICAgICBwYXJzZV9vcF9zZXF1ZW5jZSgpOwogICAgfSBlbHNlIGlmKG9wID09
IDU4KXsKICAgICAgcGFyc2Vfb3BfcmVjbGFpbV9jb21wbGV0ZSgpOwogICAgfSBlbHNlIGlmKG9w
ID09IDI0KXsKICAgICAgcGFyc2Vfb3BfcHV0cm9vdGZoKCk7CiAgICB9IGVsc2UgaWYob3AgPT0g
NTIpewogICAgICBwYXJzZV9vcF9zZWNpbmZvX25vX25hbWUoKTsKICAgIH0gZWxzZSBpZihvcCA9
PSA0NCl7CiAgICAgIHBhcnNlX29wX2Rlc3Ryb3lfc2Vzc2lvbigpOwogICAgfSBlbHNlIGlmKG9w
ID09IDU3KXsKICAgICAgcGFyc2Vfb3BfZGVzdHJveV9jbGllbnRpZCgpOwogICAgfSBlbHNlIGlm
KG9wID09IDEwKXsKICAgICAgcGFyc2Vfb3BfZ2V0ZmgoKTsKICAgIH0gZWxzZSBpZihvcCA9PSA5
KXsKICAgICAgcGFyc2Vfb3BfZ2V0YXR0cigpOwogICAgfSBlbHNlIGlmKG9wID09IDIyKXsKICAg
ICAgcGFyc2Vfb3BfcHV0ZmgoKTsKICAgIH0gZWxzZSBpZihvcCA9PSAzKXsKICAgICAgcGFyc2Vf
b3BfYWNjZXNzKCk7CiAgICB9IGVsc2UgaWYob3AgPT0gMTUpewogICAgICBwYXJzZV9vcF9sb29r
dXAoKTsKICAgIH0gZWxzZSBpZihvcCA9PSAyNil7CiAgICAgIHBhcnNlX29wX3JlYWRkaXIoKTsK
ICAgIH0gZWxzZSBpZihvcCA9PSAxOCl7CiAgICAgIHBhcnNlX29wX29wZW4oKTsKICAgIH0gZWxz
ZSBpZihvcCA9PSAzNCl7CiAgICAgIHBhcnNlX29wX3NldGF0dHIoKTsKICAgIH0gZWxzZSBpZihv
cCA9PSA1MCl7CiAgICAgIHBhcnNlX29wX2xheW91dGdldCgpOwogICAgfSBlbHNlIGlmKG9wID09
IDM4KXsKICAgICAgcGFyc2Vfb3Bfd3JpdGUoKTsKICAgIH0gZWxzZSBpZihvcCA9PSAyNSl7CiAg
ICAgIHBhcnNlX29wX3JlYWQoKTsKICAgIH0gZWxzZSBpZihvcCA9PSA1KXsKICAgICAgcGFyc2Vf
b3BfY29tbWl0KCk7CiAgICB9IGVsc2UgewogICAgICBwcmludGYoInVua25vd24gb3AgJWRcbiIs
IG9wKTsKICAgICAgLy8gY2Fubm90IGNvbnRpbnVlIHRvIHRoZSBuZXh0IG9wIHNpbmNlCiAgICAg
IC8vIHdlIGRvbid0IGtub3cgaG93IGxvbmcgdGhpcyBvbmUgaXMuCiAgICAgIGJyZWFrOwogICAg
fQogICAgaWYoc3ltc3RhcnQgIT0gLTEpCiAgICAgIHN5bWVuZCA9IG9pOwogICAgb3Bjb3VudHNb
b3AmMHhmZl0gKz0gMTsKICB9Cn0KCnZvaWQKcGFyc2VfcnBjKCkKewogIC8vIFNVTiBSUEMKICBp
bnQgeGlkID0gcGFyc2UzMigpOwogIHBhcnNlMzIoKTsgLy8gbXR5cGU9Q0FMTAogIHBhcnNlMzIo
KTsgLy8gcnBjIHZlcnNpb24KICBwYXJzZTMyKCk7IC8vIHByb2cjCiAgcGFyc2UzMigpOyAvLyBw
cm9nIHZlcnMKICBpbnQgcHJvYyA9IHBhcnNlMzIoKTsKICBwYXJzZTMyKCk7IC8vIGNyZWQgdHlw
ZQogIHBhcnNlX29wYXF1ZSgwKTsgLy8gY3JlZAogIHBhcnNlMzIoKTsgLy8gdmVyZiB0eXBlCiAg
cGFyc2Vfb3BhcXVlKDApOyAvLyB2ZXJmCgogIHB1dDMyKHhpZCk7CiAgcHV0MzIoMSk7IC8vIFJF
UExZCiAgcHV0MzIoMCk7IC8vIE1TR19BQ0NFUFRFRAogIHB1dDMyKDApOyAvLyBvcGFxdWVfYXV0
aCBmbGF2b3IgPSBBVVRIX05VTEwKICBwdXQzMigwKTsgLy8gb3BhcXVlX2F1dGggbGVuZ3RoCiAg
cHV0MzIoMCk7IC8vIFNVQ0NFU1MKCiAgaWYocHJvYyA9PSAwKXsKICAgIHBhcnNlX25vcCgpOwog
IH0gZWxzZSBpZihwcm9jID09IDEpewogICAgcGFyc2VfY29tcG91bmQoKTsKICB9IGVsc2Ugewog
ICAgcHJpbnRmKCJ1bmtub3duIHJwYyBwcm9jICVkXG4iLCBwcm9jKTsKICB9Cn0KCmludAptYWlu
KCl7CiAgc2V0bGluZWJ1ZihzdGRvdXQpOwogIHN0cnVjdCBybGltaXQgcjsKICByLnJsaW1fY3Vy
ID0gci5ybGltX21heCA9IDA7CiAgc2V0cmxpbWl0KFJMSU1JVF9DT1JFLCAmcik7CgogIGludCBz
ID0gc29ja2V0KEFGX0lORVQsIFNPQ0tfU1RSRUFNLCAwKTsKICBzdHJ1Y3Qgc29ja2FkZHJfaW4g
c2luOwogIG1lbXNldCgmc2luLCAwLCBzaXplb2Yoc2luKSk7CiAgc2luLnNpbl9mYW1pbHkgPSBB
Rl9JTkVUOwogIHNpbi5zaW5fcG9ydCA9IGh0b25zKDIwNDkpOwogIGludCB5ZXMgPSAxOwogIHNl
dHNvY2tvcHQocywgU09MX1NPQ0tFVCwgU09fUkVVU0VBRERSLCAmeWVzLCBzaXplb2YoeWVzKSk7
CiAgaWYoYmluZChzLCAoc3RydWN0IHNvY2thZGRyICopJnNpbiwgc2l6ZW9mKHNpbikpIDwgMCl7
CiAgICBwZXJyb3IoImJpbmQiKTsgZXhpdCgxKTsKICB9CiAgbGlzdGVuKHMsIDEwKTsKCgogIGlu
dCBwaWQxID0gZm9yaygpOwogIGlmKHBpZDEgPT0gMCl7CiAgICBjbG9zZShzKTsKICAgIGlmKHN5
c3RlbSgiZWNobyAtbiBtb3VudDogOyBtb3VudCAtbyBub2xvY2ssbm9kZXYgMTI3LjAuMC4xOi90
bXAgL21udCIpID09IDApewogICAgICBpbnQgZmQgPSBvcGVuKCIvbW50L3oiLCAwKTsKICAgICAg
aWYoZmQgPj0gMCl7CiAgICAgICAgc3RydWN0IHN0YXQgc2I7CiAgICAgICAgbWVtc2V0KCZzYiwg
MCwgc2l6ZW9mKHNiKSk7CiAgICAgICAgZnN0YXQoZmQsICZzYik7CiAgICAgICAgaWYoKHNiLnN0
X21vZGUgJiBTX0lGTVQpID09IFNfSUZDSFIpewogICAgICAgICAgcHJpbnRmKCJvb3BzIHN0X21v
ZGUgMCVvIC0tIGNoYXJhY3RlciBkZXZpY2VcbiIsIHNiLnN0X21vZGUpOwogICAgICAgICAgc3lz
dGVtKCJoYWx0IC1mIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIHN5c3RlbSgiZWNobyAtbiB1
bW91bnQ6IDsgdW1vdW50IC9tbnQiKTsKICAgIH0KICAgIGV4aXQoMCk7CiAgfQoKICBpbnQgcGlk
MiA9IGZvcmsoKTsKICBpZihwaWQyID09IDApewoKICAgIHNvY2tsZW5fdCBzaW5sZW4gPSBzaXpl
b2Yoc2luKTsKICAgIHByaW50ZigiY2FsbGluZyBhY2NlcHRcbiIpOwogICAgaW50IHMxID0gYWNj
ZXB0KHMsIChzdHJ1Y3Qgc29ja2FkZHIgKikgJnNpbiwgJnNpbmxlbik7CiAgICBwcmludGYoImFj
Y2VwdCByZXR1cm5lZCAlZFxuIiwgczEpOwogICAgaWYoczEgPCAwKSB7IHBlcnJvcigiYWNjZXB0
Iik7IGV4aXQoMSk7IH0KICAgIGNsb3NlKHMpOwogIAogICAgd2hpbGUoMSl7CiAgICAgIGlmKHJl
YWRuKHMxLCAmaWxlbiwgNCkgPCAwKSBicmVhazsKICAgICAgaWxlbiA9IG50b2hsKGlsZW4pOwog
ICAgICBpbGVuICY9IDB4N2ZmZmZmZmY7CiAgICAgIGlmKHJlYWRuKHMxLCBpYnVmLCBpbGVuKSA8
IDApIGJyZWFrOwogICAgICBvaSA9IGlpID0gMDsKICAgICAgcHV0MzIoMCk7IC8vIHBsYWNlLWhv
bGRlciBmb3IgbGVuZ3RoCiAgICAgIHBhcnNlX3JwYygpOwogICAgICAqKGludCopKG9idWYrMCkg
PSBodG9ubCgob2kgLSA0KSB8IDB4ODAwMDAwMDApOwogICAgICBpZihhYWkgPiBOQUEpewogICAg
ICAgIHByaW50Zigib29wcyBhYWkgJWQgTkFBICVkXG4iLCBhYWksIE5BQSk7CiAgICAgICAgZXhp
dCgxKTsKICAgICAgfQogICAgICBpZihzeW1zdGFydCAhPSAtMSl7CiAgICAgICAgZm9yKGludCBp
ID0gc3ltc3RhcnQ7IGkgPCBvaSAmJiBpIDwgc3ltZW5kICYmIGFhaSA8IE5BQTsgaSArPSA4KQog
ICAgICAgICAgKih1bnNpZ25lZCBsb25nIGxvbmcgKikob2J1ZiArIGkpIF49IGFhW2FhaSsrXTsK
ICAgICAgICBzeW1zdGFydCA9IC0xOwogICAgICB9CiAgICAgIGlmKHdyaXRlKHMxLCBvYnVmLCBv
aSk8PTApIHBlcnJvcigid3JpdGUiKTsKICAgIH0KICAgIGV4aXQoMSk7CiAgfQogIGNsb3NlKHMp
OwogIHNsZWVwKDIwKTsKfQo=
--=-=-=--
